service: fault-tolerant-system

plugins:
  - serverless-typescript

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    TABLE_NAME: !Ref TasksTable
    QUEUE_URL: !Ref MainQueue
    DLQ_URL: !Ref DeadLetterQueue
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueUrl
            - cloudwatch:PutMetricData
            - cloudwatch:GetMetricStatistics
            - cloudwatch:ListMetrics
          Resource: "*"
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
          Resource: !GetAtt TasksTable.Arn

resources:
  Resources:
    MainQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-main-queue
        VisibilityTimeout: 30
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt DeadLetterQueue.Arn
          maxReceiveCount: 2

    DeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-dlq
        MessageRetentionPeriod: 1209600  # 14 днів

    TasksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-tasks
        AttributeDefinitions:
          - AttributeName: taskId
            AttributeType: S
        KeySchema:
          - AttributeName: taskId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

functions:
  submitTask:
    handler: src/handlers/submitTask.handler
    events:
      - http:
          path: tasks
          method: post

  processTask:
    handler: src/handlers/processTask.handler
    events:
      - sqs:
          arn: !GetAtt MainQueue.Arn
          batchSize: 1
          functionResponseType: ReportBatchItemFailures

  monitorDLQ:
    handler: src/handlers/monitorDLQ.handler
    events:
      - sqs:
          arn: !GetAtt DeadLetterQueue.Arn
          batchSize: 1

  getTaskStatus:
    handler: src/handlers/getTaskStatus.handler
    events:
      - http:
          path: tasks/{taskId}
          method: get